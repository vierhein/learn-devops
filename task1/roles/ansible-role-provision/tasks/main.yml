---
# tasks file for ansible-role-provision

- name: Install nginx, openssl, ufw, php-fpm
  ansible.builtin.package:
    name: 
      - "nginx={{ ngix_version }}"
      - "openssl={{ openssl_version }}"
      - "ufw={{ ufw_version }}"
      - "php-fpm={{ php_fpm_version }}"
    update_cache: yes
    state: present

# Configure firewall (allow SSH, HTTP, HTTPS)
- name: Allow SSH, HTTP, HTTPS ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - '22'
    - '80'
    - '443'
- name: Enable UFW
  community.general.ufw:
    state: enabled

# Add users for run script
- name: Add the "{{ user0 }}"
  ansible.builtin.user:
    name: "{{ user0 }}"
    shell: /bin/bash
    create_home: true
# Set permission user-run for runnig script
- name: Copy sudoers
  template:
    src: "{{ path_sudoers }}"
    dest: /etc/sudoers.d/sudoers-user

# Add users for sites administration, set ssh keys
- name: Add the "{{ user1 }}"
  ansible.builtin.user:
    name: "{{ user1 }}"
    shell: /bin/bash
    create_home: true
- name: Create ssh directory
  ansible.builtin.file:
    path: "/home/{{ user1 }}/.ssh"
    state: directory
    mode: '0755'
- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ path_ssh_key_user_1 }}"
    dest: "/home/{{ user1 }}/.ssh/authorized_keys"
    owner: "{{ user1 }}"
    group: "{{ user1 }}"
    mode: '0644'
- name: Add the "{{ user2 }}"
  ansible.builtin.user:
    name: "{{ user2 }}"
    shell: /bin/bash
    create_home: true
- name: Create ssh directory
  ansible.builtin.file:
    path: "/home/{{ user2 }}/.ssh"
    state: directory
    mode: '0755'
- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ path_ssh_key_user_2 }}"
    dest: "/home/{{ user2 }}/.ssh/authorized_keys"
    owner: "{{ user2 }}"
    group: "{{ user2 }}"
    mode: '0644'

#site-a
- name: Create site-a directory
  ansible.builtin.file:
    path: /var/www/site-a/html
    state: directory
    owner: "{{ user1 }}"
    group: "{{ user1 }}"
    mode: '0755'

#site-b
- name: Create site-b directory
  ansible.builtin.file:
    path: /var/www/site-b/html
    state: directory
    owner: "{{ user2 }}"
    group: "{{ user2 }}"
    mode: '0755'

- name: Copy index.php
  ansible.builtin.copy:
    src: "{{ path_index_php }}"
    dest: /var/www/site-a/html/index.php

- name: Copy default nginx page
  ansible.builtin.copy:
    remote_src: true
    src: /var/www/html/index.nginx-debian.html
    dest: /var/www/site-b/html/index.html

- name: Copy nginx conf
  ansible.builtin.copy:
    src: "{{ path_nginx_conf }}"
    dest: /etc/nginx/sites-available/default


- name: Get secrets
  set_fact:
    secret_cert: "{{ lookup('aws_secret', 'cert', region=aws_region, aws_access_key=aws_access_key_id, aws_secret_key=aws_secret_access_key) }}"
    secret_key: "{{ lookup('aws_secret', 'key', region=aws_region, aws_access_key=aws_access_key_id, aws_secret_key=aws_secret_access_key) }}"

- name: Copy cert
  ansible.builtin.copy:
    content: "{{ secret_cert }}"
    dest: /etc/ssl/certs/nginx-selfsigned.crt
- name: Copy key
  ansible.builtin.copy:
    content: "{{ secret_key }}"
    dest: /etc/ssl/private/nginx-selfsigned.key

- name: Copy logrotate
  template:
    src: "{{ path_logrotate }}"
    dest: /etc/logrotate.d/nginx

- name: Restart service nginx
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: nginx
