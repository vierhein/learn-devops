apiVersion: v1
kind: ServiceAccount
metadata:
  name: getting-pods
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: getting-pods
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "patch", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: getting-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: getting-pods
subjects:
  - kind: ServiceAccount
    name: getting-pods
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: getting-count-restart
  namespace: default
spec:
  concurrencyPolicy: Forbid
  schedule: "* * * * *"
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        spec:
          serviceAccountName: getting-pods
          restartPolicy: Never
          containers:
            - name: kubectl
              image: jitesoft/kubectl
              env:
                - name: API_URL
                  value: "https://example-api.com"
                - name: THRESHOLD
                  value: "1"
              command:
                - sh
                - -c
                - ARR_PODS=$(kubectl get pods | awk -v THR="$THRESHOLD" '$4>THR' | awk '{print $1}' | awk 'NR > 1 { print }') &&
                  [ -n "$ARR_PODS" ] && curl -s -X POST -d "pods restart count greater than $THRESHOLD $ARR_PODS" "$API_URL" || echo "OK"